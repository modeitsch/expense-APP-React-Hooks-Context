{"ast":null,"code":"var _jsxFileName = \"/Users/moshedeitsch/Desktop/stuff/react/expense/src/context/Globalstate.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nconst initialState = {\n  transactions: []\n};\nconst localStorageTransactions = JSON.parse(localStorage.getItem('transactions'));\nlet transactions = localStorage.getItem('transactions') !== null ? localStorageTransactions : [];\nexport const GlobalContext = createContext(initialState); // Prrovider\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); //Action\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id\n    });\n    updateLocalStorage();\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: transaction\n    });\n  }\n\n  function updateLocalStorage() {\n    localStorage.setItem('transactions', JSON.stringify(initialState.transactions));\n  }\n\n  return React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction: deleteTransaction,\n      addTransaction: addTransaction,\n      updateLocalStorage: updateLocalStorage\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/Users/moshedeitsch/Desktop/stuff/react/expense/src/context/Globalstate.js"],"names":["React","createContext","useReducer","AppReducer","initialState","transactions","localStorageTransactions","JSON","parse","localStorage","getItem","GlobalContext","GlobalProvider","children","state","dispatch","deleteTransaction","id","type","payload","updateLocalStorage","addTransaction","transaction","setItem","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AADG,CAArB;AAKA,MAAMC,wBAAwB,GAAGC,IAAI,CAACC,KAAL,CAC7BC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAD6B,CAAjC;AAIE,IAAIL,YAAY,GACdI,YAAY,CAACC,OAAb,CAAqB,cAArB,MAAyC,IAAzC,GAAgDJ,wBAAhD,GAA2E,EAD7E;AAKF,OAAO,MAAMK,aAAa,GAAGV,aAAa,CAACG,YAAD,CAAnC,C,CAGP;;AAEA,OAAO,MAAMQ,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,UAAU,CAACC,UAAD,EAAaC,YAAb,CAApC,CAD4C,CAI5C;;AAEA,WAASY,iBAAT,CAA2BC,EAA3B,EAA8B;AAC1BF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAC,oBADA;AAELC,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAG,IAAAA,kBAAkB;AAErB;;AAED,WAASC,cAAT,CAAwBC,WAAxB,EAAoC;AAChCP,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAC,iBADA;AAELC,MAAAA,OAAO,EAAEG;AAFJ,KAAD,CAAR;AAMH;;AAED,WAASF,kBAAT,GAA8B;AAC1BX,IAAAA,YAAY,CAACc,OAAb,CAAqB,cAArB,EAAqChB,IAAI,CAACiB,SAAL,CAAepB,YAAY,CAACC,YAA5B,CAArC;AACD;;AAKH,SAAQ,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AACnCA,MAAAA,YAAY,EAAES,KAAK,CAACT,YADe;AAEnCW,MAAAA,iBAAiB,EAAEA,iBAFgB;AAGnCK,MAAAA,cAAc,EAAEA,cAHmB;AAInCD,MAAAA,kBAAkB,EAAEA;AAJe,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMHP,QANG,CAAR;AAQH,CAxCM","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\nconst initialState = {\n    transactions: []\n}\n\n\nconst localStorageTransactions = JSON.parse(\n    localStorage.getItem('transactions')\n  );\n  \n  let transactions =\n    localStorage.getItem('transactions') !== null ? localStorageTransactions : [];\n  \n\n\nexport const GlobalContext = createContext(initialState);\n\n\n// Prrovider\n\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n\n    //Action\n\n    function deleteTransaction(id){\n        dispatch({\n            type:\"DELETE_TRANSACTION\",\n            payload: id\n        })\n\n        updateLocalStorage();\n\n    }\n\n    function addTransaction(transaction){\n        dispatch({\n            type:\"ADD_TRANSACTION\",\n            payload: transaction\n        })\n\n\n    }\n\n    function updateLocalStorage() {\n        localStorage.setItem('transactions', JSON.stringify(initialState.transactions));\n      }\n      \n\n\n\n    return (<GlobalContext.Provider value={{\n        transactions: state.transactions,\n        deleteTransaction: deleteTransaction,\n        addTransaction: addTransaction,\n        updateLocalStorage: updateLocalStorage\n    }}>\n        {children}\n    </GlobalContext.Provider>)\n}"]},"metadata":{},"sourceType":"module"}